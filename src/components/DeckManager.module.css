.deckManager {
  padding: var(--space-md);
  width: 100%;
  max-width: none;
  margin: 0;
}

@media (min-width: 768px) {
  .deckManager {
    padding: var(--space-xl);
    max-width: 1400px;
    margin: 0 auto;
  }
}

.header {
  display: flex;
  justify-content: space-between;
  align-items: center;
  margin-bottom: var(--space-xl) !important;
  flex-wrap: wrap;
  gap: var(--space-md);
}

.headerActions {
  display: flex;
  align-items: center;
  gap: var(--space-md);
}

.optionsBtn {
  padding: var(--space-md);
  border-radius: var(--radius-md);
  font-size: 1.2rem;
  color: var(--text-secondary);
  transition: all 0.2s ease;
}

.optionsBtn:hover {
  color: var(--primary);
  background: rgba(99, 102, 241, 0.1);
}

.header h1 {
  font-size: 2rem;
  font-weight: 700;
  color: var(--text-primary);
  margin: 0;
}

.createForm {
  padding: var(--space-xl);
  margin-bottom: var(--space-xl);
  max-width: 400px;
}

.createForm h3 {
  margin: 0 0 var(--space-lg) 0;
  color: var(--text-primary);
}

.createForm input {
  width: 100%;
  padding: var(--space-md);
  border: 1px solid var(--border);
  border-radius: var(--radius-md);
  background: var(--surface);
  color: var(--text-primary);
  font-size: 1rem;
  margin-bottom: var(--space-lg);
}

.createForm input:focus {
  outline: none;
  border-color: var(--primary);
  box-shadow: 0 0 0 3px rgba(99, 102, 241, 0.1);
}

.formActions {
  display: flex;
  gap: var(--space-md);
  justify-content: flex-end;
}

.decksGrid {
  display: flex;
  flex-wrap: wrap;
  gap: var(--space-md);
  margin-bottom: var(--space-xl);
}

.decksGrid > * {
  flex: 1 1 280px;
  min-width: 280px;
  max-width: 100%;
}

@media (min-width: 768px) {
  .decksGrid {
    gap: var(--space-lg);
  }
  
  .decksGrid > * {
    flex: 1 1 320px;
    min-width: 320px;
  }
}

@media (min-width: 1200px) {
  .decksGrid > * {
    flex: 1 1 350px;
    min-width: 350px;
    max-width: 400px;
  }
}

.deckCard {
  padding: var(--space-xl);
  transition: transform 0.2s ease;
}

.deckCard:hover {
  transform: translateY(-4px);
}

.deckHeader {
  display: flex;
  justify-content: space-between;
  align-items: flex-start;
  margin-bottom: var(--space-lg);
}

.deckName {
  font-size: 1.25rem;
  font-weight: 600;
  color: var(--text-primary);
  margin: 0;
  flex: 1;
  word-break: break-word;
}

.deleteBtn {
  font-size: 1.2rem;
  padding: var(--space-xs);
  margin-left: var(--space-sm);
  border-radius: var(--radius-sm);
}

.deleteBtn:hover {
  background: rgba(239, 68, 68, 0.1);
  color: var(--error);
}

.deckStats {
  margin-bottom: var(--space-lg);
}

.statRow {
  display: flex;
  justify-content: space-between;
  margin-bottom: var(--space-sm);
  font-size: 0.9rem;
}

.statRow span:first-child {
  color: var(--text-secondary);
}

.statRow span:last-child {
  color: var(--text-primary);
  font-weight: 500;
}

.progressContainer {
  margin-bottom: var(--space-lg);
}

.progressBar {
  width: 100%;
  height: 6px;
  background: var(--surface-light);
  border-radius: var(--radius-sm);
  overflow: hidden;
  margin-bottom: var(--space-sm);
}

.progressFill {
  height: 100%;
  background: var(--gradient-primary);
  transition: width 0.3s ease;
}

.progressText {
  font-size: 0.8rem;
  color: var(--text-muted);
}

.deckActions {
  display: flex;
  gap: var(--space-md);
  margin-top: var(--space-md);
}

.deckActions button {
  flex: 1;
  font-size: 1rem;
  font-weight: 700;
  padding: var(--space-md) var(--space-lg);
  min-height: 48px;
  border-radius: var(--radius-lg);
  transition: all 0.3s ease;
  position: relative;
  overflow: hidden;
  box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);
}

.deckActions button:hover:not(:disabled) {
  transform: translateY(-3px);
  box-shadow: 0 8px 25px rgba(0, 0, 0, 0.15);
}

.deckActions button:active:not(:disabled) {
  transform: translateY(-1px);
}

.deckActions button:disabled {
  opacity: 0.5;
  cursor: not-allowed;
  transform: none !important;
  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.05);
}

/* Enhanced styling for action buttons */
.deckActions .btnSecondary {
  background: linear-gradient(135deg, rgba(255, 255, 255, 0.95), rgba(248, 250, 252, 0.95));
  border: 2px solid var(--primary);
  color: var(--primary);
  backdrop-filter: blur(10px);
}

.deckActions .btnSecondary:hover:not(:disabled) {
  background: linear-gradient(135deg, var(--primary), var(--primary-light));
  color: white;
  border-color: var(--primary);
  box-shadow: 0 8px 25px rgba(102, 126, 234, 0.3);
}

.deckActions .btnPrimary {
  background: linear-gradient(135deg, var(--primary), var(--secondary));
  border: 2px solid transparent;
  color: white;
  position: relative;
}

.deckActions .btnPrimary::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: linear-gradient(135deg, var(--accent), var(--primary));
  opacity: 0;
  transition: opacity 0.3s ease;
  border-radius: inherit;
}

.deckActions .btnPrimary:hover:not(:disabled)::before {
  opacity: 1;
}

.deckActions .btnPrimary:hover:not(:disabled) {
  box-shadow: 0 8px 25px rgba(102, 126, 234, 0.4);
}

.deckActions .btnPrimary span,
.deckActions .btnPrimary svg {
  position: relative;
  z-index: 1;
}

/* Add subtle pulse to Study button */
.deckActions .btnPrimary:not(:disabled) {
  animation: subtle-pulse 3s ease-in-out infinite;
}

@keyframes subtle-pulse {
  0%, 100% {
    box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);
  }
  50% {
    box-shadow: 0 4px 20px rgba(102, 126, 234, 0.2);
  }
}

/* Responsive adjustments */
@media (max-width: 640px) {
  .deckActions {
    flex-direction: column;
    gap: var(--space-sm);
  }
  
  .deckActions button {
    font-size: 0.95rem;
    padding: var(--space-md);
    min-height: 44px;
  }
}

.emptyState {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  text-align: center;
  padding: var(--space-2xl);
  margin-top: var(--space-2xl);
  min-height: 60vh;
}

.emptyIcon {
  font-size: 5rem;
  margin-bottom: var(--space-xl);
  color: var(--text-muted);
  opacity: 0.6;
}

.emptyState h2 {
  font-size: 1.75rem;
  margin-bottom: var(--space-lg);
  color: var(--text-primary);
  font-weight: 600;
}

.emptyState p {
  color: var(--text-secondary);
  font-size: 1.1rem;
  max-width: 400px;
  line-height: 1.5;
}

/* Mobile optimizations */
@media (max-width: 640px) {
  .deckManager {
    padding: var(--space-md);
  }
  
  .header h1 {
    font-size: 1.5rem;
  }
  
  .decksGrid {
    grid-template-columns: 1fr;
    gap: var(--space-md);
  }
  
  .deckCard {
    padding: var(--space-lg);
  }
}

/* Desktop adjustments */
@media (min-width: 768px) {
  .deckManager {
    margin-left: 240px; /* Account for side navigation */
    padding: var(--space-xl);
  }
}

/* Study Options Modal */
.optionsModal {
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: rgba(0, 0, 0, 0.5);
  display: flex;
  align-items: center;
  justify-content: center;
  z-index: 1000;
  padding: var(--space-md);
}

.optionsContent {
  width: 100%;
  max-width: 380px;
  padding: var(--space-lg);
  max-height: 70vh;
  overflow-y: auto;
  background: white;
  backdrop-filter: none;
  border: 1px solid var(--border);
  box-shadow: 0 10px 30px rgba(0, 0, 0, 0.15);
  position: relative;
}

.closeButton {
  position: absolute;
  top: var(--space-md);
  right: var(--space-md);
  background: none;
  border: none;
  font-size: 1.2rem;
  color: var(--text-muted);
  cursor: pointer;
  padding: var(--space-xs);
  border-radius: var(--radius-sm);
  transition: all 0.2s ease;
  z-index: 10;
}

.closeButton:hover {
  color: var(--text-primary);
  background: rgba(0, 0, 0, 0.05);
}

.optionsContent h3 {
  margin: 0 0 var(--space-lg) 0;
  color: var(--text-primary);
  text-align: center;
  font-size: 1.3rem;
  font-weight: 600;
  padding-bottom: var(--space-sm);
  border-bottom: 2px solid var(--border);
}

.optionGroup {
  margin-bottom: var(--space-lg);
}

.optionGroup > label {
  display: flex;
  align-items: center;
  justify-content: center;
  gap: var(--space-sm);
  color: var(--text-primary);
  font-weight: 600;
  margin-bottom: var(--space-md);
  font-size: 1rem;
  text-align: center;
}

.optionGroup > label:only-child {
  margin-bottom: 0;
  font-weight: 500;
  cursor: pointer;
  padding: var(--space-md);
  border-radius: var(--radius-md);
  transition: background-color 0.2s ease;
  justify-content: flex-start;
}

.optionGroup > label:only-child:hover {
  background-color: rgba(99, 102, 241, 0.05);
}

/* Custom Checkbox Styling */
.optionGroup input[type="checkbox"] {
  appearance: none;
  width: 18px;
  height: 18px;
  border: 2px solid var(--border);
  border-radius: 4px;
  margin-right: var(--space-sm);
  position: relative;
  cursor: pointer;
  transition: all 0.2s ease;
  background: white;
  display: flex;
  align-items: center;
  justify-content: center;
}

.optionGroup input[type="checkbox"]:checked {
  background: var(--primary);
  border-color: var(--primary);
}

.optionGroup input[type="checkbox"]:checked::after {
  content: 'âœ“';
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  color: white;
  font-size: 14px;
  font-weight: bold;
  line-height: 1;
}

.optionGroup input[type="checkbox"]:hover {
  border-color: var(--primary);
}

.radioGroup {
  display: flex;
  flex-direction: column;
  gap: var(--space-sm);
  margin-left: 0;
  background: rgba(248, 250, 252, 0.8);
  padding: var(--space-md);
  border-radius: var(--radius-md);
  border: 1px solid var(--border);
}

.radioGroup label {
  display: flex;
  align-items: center;
  gap: var(--space-sm);
  color: var(--text-primary);
  font-weight: 500;
  cursor: pointer;
  padding: var(--space-sm);
  border-radius: var(--radius-sm);
  transition: all 0.2s ease;
}

.radioGroup label:hover {
  background-color: rgba(99, 102, 241, 0.1);
  color: var(--primary);
}

/* Custom Radio Button Styling */
.radioGroup input[type="radio"] {
  appearance: none;
  width: 16px;
  height: 16px;
  border: 2px solid var(--border);
  border-radius: 50%;
  margin-right: var(--space-sm);
  position: relative;
  cursor: pointer;
  transition: all 0.2s ease;
  background: white;
  display: flex;
  align-items: center;
  justify-content: center;
}

.radioGroup input[type="radio"]:checked {
  border-color: var(--primary);
}

.radioGroup input[type="radio"]:checked::after {
  content: '';
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  width: 8px;
  height: 8px;
  border-radius: 50%;
  background: var(--primary);
}

.radioGroup input[type="radio"]:hover {
  border-color: var(--primary);
}
